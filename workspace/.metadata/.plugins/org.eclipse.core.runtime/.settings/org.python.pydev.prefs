INTERPRETERS_CHECKED_ONCE=true
INTERPRETER_PATH_NEW=<xml>\n<name>python</name>\n<version>2.7</version>\n<executable>/usr/bin/python</executable>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload</lib>\n<lib>/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC</lib>\n<lib>/Library/Python/2.7/site-packages</lib>\n<lib>/Library/Python/2.7/site-packages/SQLObject-3.0.0a2dev_20151224-py2.7.egg</lib>\n<lib>/Library/Python/2.7/site-packages/PyDispatcher-2.0.5-py2.7.egg</lib>\n<lib>/Library/Python/2.7/site-packages/FormEncode-1.3.0-py2.7.egg</lib>\n<forced_lib>Image</forced_lib>\n<forced_lib>OpenGL</forced_lib>\n<forced_lib>__builtin__</forced_lib>\n<forced_lib>__main__</forced_lib>\n<forced_lib>_ast</forced_lib>\n<forced_lib>_bisect</forced_lib>\n<forced_lib>_bytesio</forced_lib>\n<forced_lib>_codecs</forced_lib>\n<forced_lib>_codecs_cn</forced_lib>\n<forced_lib>_codecs_hk</forced_lib>\n<forced_lib>_codecs_iso2022</forced_lib>\n<forced_lib>_codecs_jp</forced_lib>\n<forced_lib>_codecs_kr</forced_lib>\n<forced_lib>_codecs_tw</forced_lib>\n<forced_lib>_collections</forced_lib>\n<forced_lib>_csv</forced_lib>\n<forced_lib>_fileio</forced_lib>\n<forced_lib>_functools</forced_lib>\n<forced_lib>_heapq</forced_lib>\n<forced_lib>_hotshot</forced_lib>\n<forced_lib>_json</forced_lib>\n<forced_lib>_locale</forced_lib>\n<forced_lib>_lsprof</forced_lib>\n<forced_lib>_md5</forced_lib>\n<forced_lib>_multibytecodec</forced_lib>\n<forced_lib>_random</forced_lib>\n<forced_lib>_sha</forced_lib>\n<forced_lib>_sha256</forced_lib>\n<forced_lib>_sha512</forced_lib>\n<forced_lib>_sre</forced_lib>\n<forced_lib>_struct</forced_lib>\n<forced_lib>_subprocess</forced_lib>\n<forced_lib>_symtable</forced_lib>\n<forced_lib>_warnings</forced_lib>\n<forced_lib>_weakref</forced_lib>\n<forced_lib>_winreg</forced_lib>\n<forced_lib>array</forced_lib>\n<forced_lib>audioop</forced_lib>\n<forced_lib>binascii</forced_lib>\n<forced_lib>cPickle</forced_lib>\n<forced_lib>cStringIO</forced_lib>\n<forced_lib>cmath</forced_lib>\n<forced_lib>datetime</forced_lib>\n<forced_lib>email</forced_lib>\n<forced_lib>errno</forced_lib>\n<forced_lib>exceptions</forced_lib>\n<forced_lib>future_builtins</forced_lib>\n<forced_lib>gc</forced_lib>\n<forced_lib>hashlib</forced_lib>\n<forced_lib>imageop</forced_lib>\n<forced_lib>imp</forced_lib>\n<forced_lib>itertools</forced_lib>\n<forced_lib>marshal</forced_lib>\n<forced_lib>math</forced_lib>\n<forced_lib>mmap</forced_lib>\n<forced_lib>msvcrt</forced_lib>\n<forced_lib>nt</forced_lib>\n<forced_lib>numpy</forced_lib>\n<forced_lib>operator</forced_lib>\n<forced_lib>os</forced_lib>\n<forced_lib>os.path</forced_lib>\n<forced_lib>parser</forced_lib>\n<forced_lib>posix</forced_lib>\n<forced_lib>pwd</forced_lib>\n<forced_lib>pytest</forced_lib>\n<forced_lib>scipy</forced_lib>\n<forced_lib>signal</forced_lib>\n<forced_lib>socket</forced_lib>\n<forced_lib>strop</forced_lib>\n<forced_lib>sys</forced_lib>\n<forced_lib>thread</forced_lib>\n<forced_lib>time</forced_lib>\n<forced_lib>wx</forced_lib>\n<forced_lib>wxPython</forced_lib>\n<forced_lib>xxsubtype</forced_lib>\n<forced_lib>zipimport</forced_lib>\n<forced_lib>zlib</forced_lib>\n</xml>&&&&&<xml>\n<name>Anaconda Python</name>\n<version>2.7</version>\n<executable>/Users/marshall/anaconda/bin/python2.7</executable>\n<lib>/Users/marshall/anaconda/lib/python2.7</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/plat-darwin</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/plat-mac</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/plat-mac/lib-scriptpackages</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/lib-tk</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/lib-dynload</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/site-packages</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/site-packages/Sphinx-1.3.5-py2.7.egg</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/site-packages/aeosa</lib>\n<lib>/Users/marshall/anaconda/lib/python2.7/site-packages/setuptools-19.6.2-py2.7.egg</lib>\n<forced_lib>Image</forced_lib>\n<forced_lib>OpenGL</forced_lib>\n<forced_lib>__builtin__</forced_lib>\n<forced_lib>__main__</forced_lib>\n<forced_lib>_ast</forced_lib>\n<forced_lib>_bisect</forced_lib>\n<forced_lib>_bytesio</forced_lib>\n<forced_lib>_codecs</forced_lib>\n<forced_lib>_codecs_cn</forced_lib>\n<forced_lib>_codecs_hk</forced_lib>\n<forced_lib>_codecs_iso2022</forced_lib>\n<forced_lib>_codecs_jp</forced_lib>\n<forced_lib>_codecs_kr</forced_lib>\n<forced_lib>_codecs_tw</forced_lib>\n<forced_lib>_collections</forced_lib>\n<forced_lib>_csv</forced_lib>\n<forced_lib>_fileio</forced_lib>\n<forced_lib>_functools</forced_lib>\n<forced_lib>_heapq</forced_lib>\n<forced_lib>_hotshot</forced_lib>\n<forced_lib>_json</forced_lib>\n<forced_lib>_locale</forced_lib>\n<forced_lib>_lsprof</forced_lib>\n<forced_lib>_md5</forced_lib>\n<forced_lib>_multibytecodec</forced_lib>\n<forced_lib>_random</forced_lib>\n<forced_lib>_sha</forced_lib>\n<forced_lib>_sha256</forced_lib>\n<forced_lib>_sha512</forced_lib>\n<forced_lib>_sre</forced_lib>\n<forced_lib>_struct</forced_lib>\n<forced_lib>_subprocess</forced_lib>\n<forced_lib>_symtable</forced_lib>\n<forced_lib>_warnings</forced_lib>\n<forced_lib>_weakref</forced_lib>\n<forced_lib>_winreg</forced_lib>\n<forced_lib>array</forced_lib>\n<forced_lib>astropy</forced_lib>\n<forced_lib>astropy.units</forced_lib>\n<forced_lib>audioop</forced_lib>\n<forced_lib>binascii</forced_lib>\n<forced_lib>cPickle</forced_lib>\n<forced_lib>cStringIO</forced_lib>\n<forced_lib>cmath</forced_lib>\n<forced_lib>datetime</forced_lib>\n<forced_lib>email</forced_lib>\n<forced_lib>errno</forced_lib>\n<forced_lib>exceptions</forced_lib>\n<forced_lib>future_builtins</forced_lib>\n<forced_lib>gc</forced_lib>\n<forced_lib>hashlib</forced_lib>\n<forced_lib>imageop</forced_lib>\n<forced_lib>imp</forced_lib>\n<forced_lib>itertools</forced_lib>\n<forced_lib>marshal</forced_lib>\n<forced_lib>math</forced_lib>\n<forced_lib>mmap</forced_lib>\n<forced_lib>msvcrt</forced_lib>\n<forced_lib>nose</forced_lib>\n<forced_lib>nose.tools</forced_lib>\n<forced_lib>nt</forced_lib>\n<forced_lib>numpy</forced_lib>\n<forced_lib>operator</forced_lib>\n<forced_lib>os</forced_lib>\n<forced_lib>os.path</forced_lib>\n<forced_lib>parser</forced_lib>\n<forced_lib>posix</forced_lib>\n<forced_lib>pwd</forced_lib>\n<forced_lib>pytest</forced_lib>\n<forced_lib>scipy</forced_lib>\n<forced_lib>signal</forced_lib>\n<forced_lib>socket</forced_lib>\n<forced_lib>strop</forced_lib>\n<forced_lib>sys</forced_lib>\n<forced_lib>thread</forced_lib>\n<forced_lib>time</forced_lib>\n<forced_lib>werkzeug</forced_lib>\n<forced_lib>wx</forced_lib>\n<forced_lib>wxPython</forced_lib>\n<forced_lib>xxsubtype</forced_lib>\n<forced_lib>zipimport</forced_lib>\n<forced_lib>zlib</forced_lib>\n</xml>&&&&&
PYDEV_FUNDING_SHOWN_2014=true
eclipse.preferences.version=1
org.python.pydev.editor.templates.PyTemplatePreferencesPage=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Command line tool skeleton using argparse (suitable for Python 2.7+)" enabled\="true" id\="org.python.pydev.editor.templates.python.module.cli.argparse" name\="Module\: CLI (argparse)">\#\!/usr/local/bin/python2.7\n\# encoding\: utf-8\n'''\n${module} -- ${shortdesc}\n\n${module} is a ${description}\n\nIt defines ${classes_and_methods}\n\n@author\:     ${user_name}\n\n@copyright\:  ${year}. All rights reserved.\n\n@contact\:    ${user_email}\n@deffield    updated\: Updated\n'''\n\nimport sys\nimport os\n\nfrom argparse import ArgumentParser\nfrom argparse import RawDescriptionHelpFormatter\n\n__all__ \= []\n__version__ \= 0.1\n__date__ \= '${isodate}'\n__updated__ \= '${isodate}'\n\nDEBUG \= 1\nTESTRUN \= 0\nPROFILE \= 0\n\nclass CLIError(Exception)\:\n    '''Generic exception to raise and log different fatal errors.'''\n    def __init__(self, msg)\:\n        super(CLIError).__init__(type(self))\n        self.msg \= "E\: %s" % msg\n    def __str__(self)\:\n        return self.msg\n    def __unicode__(self)\:\n        return self.msg\n\ndef main(argv\=None)\: \# IGNORE\:C0111\n    '''Command line options.'''\n\n    if argv is None\:\n        argv \= sys.argv\n    else\:\n        sys.argv.extend(argv)\n\n    program_name \= os.path.basename(sys.argv[0])\n    program_version \= "v%s" % __version__\n    program_build_date \= str(__updated__)\n    program_version_message \= '%%(prog)s %s (%s)' % (program_version, program_build_date)\n    program_shortdesc \= __import__('__main__').__doc__.split("\\n")[1]\n    program_license \= '''%s\n\n  Created by ${user_name} on %s.\n  Copyright ${year}. All rights reserved.\n\n\n  Distributed on an "AS IS" basis without warranties\n  or conditions of any kind, either express or implied.\n\nUSAGE\n''' % (program_shortdesc, str(__date__))\n\n    try\:\n        \# Setup argument parser\n        parser \= ArgumentParser(description\=program_license, formatter_class\=RawDescriptionHelpFormatter)\n        parser.add_argument("-r", "--recursive", dest\="recurse", action\="store_true", help\="recurse into subfolders [default\: %(default)s]")\n        parser.add_argument("-v", "--verbose", dest\="verbose", action\="count", help\="set verbosity level [default\: %(default)s]")\n        parser.add_argument("-i", "--include", dest\="include", help\="only include paths matching this regex pattern. Note\: exclude is given preference over include. [default\: %(default)s]", metavar\="RE" )\n        parser.add_argument("-e", "--exclude", dest\="exclude", help\="exclude paths matching this regex pattern. [default\: %(default)s]", metavar\="RE" )\n        parser.add_argument('-V', '--version', action\='version', version\=program_version_message)\n        parser.add_argument(dest\="paths", help\="paths to folder(s) with source file(s) [default\: %(default)s]", metavar\="path", nargs\='+')\n\n        \# Process arguments\n        args \= parser.parse_args()\n\n        paths \= args.paths\n        verbose \= args.verbose\n        recurse \= args.recurse\n        inpat \= args.include\n        expat \= args.exclude\n\n        if verbose &gt; 0\:\n            print("Verbose mode on")\n            if recurse\:\n                print("Recursive mode on")\n            else\:\n                print("Recursive mode off")\n\n        if inpat and expat and inpat \=\= expat\:\n            raise CLIError("include and exclude pattern are equal\! Nothing will be processed.")\n\n        for inpath in paths\:\n            \#\#\# do something with inpath \#\#\#\n            print(inpath)\n        return 0\n    except KeyboardInterrupt\:\n        \#\#\# handle keyboard interrupt \#\#\#\n        return 0\n    except Exception, e\:\n        if DEBUG or TESTRUN\:\n            raise(e)\n        indent \= len(program_name) * " "\n        sys.stderr.write(program_name + "\: " + repr(e) + "\\n")\n        sys.stderr.write(indent + "  for help use --help")\n        return 2\n\nif __name__ \=\= "__main__"\:\n    if DEBUG\:\n        sys.argv.append("-h")\n        sys.argv.append("-v")\n        sys.argv.append("-r")\n    if TESTRUN\:\n        import doctest\n        doctest.testmod()\n    if PROFILE\:\n        import cProfile\n        import pstats\n        profile_filename \= '${module}_profile.txt'\n        cProfile.run('main()', profile_filename)\n        statsfile \= open("profile_stats.txt", "wb")\n        p \= pstats.Stats(profile_filename, stream\=statsfile)\n        stats \= p.strip_dirs().sort_stats('cumulative')\n        stats.print_stats()\n        statsfile.close()\n        sys.exit(0)\n    sys.exit(main())</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Command line tool skeleton using optparse (suitable for Python &lt; 2.6)" enabled\="true" id\="org.python.pydev.editor.templates.python.module.cli.optparse" name\="Module\: CLI (optparse)">\#\!/usr/bin/env python\n\# encoding\: utf-8\n'''\n${module} -- ${shortdesc}\n\n${module} is a ${description}\n\nIt defines ${classes_and_methods}\n\n@author\:     ${user_name}\n\n@copyright\:  ${year} All rights reserved.\n\n@contact\:    ${user_email}\n@deffield    updated\: Updated\n'''\n\nimport sys\nimport os\n\nfrom optparse import OptionParser\n\n__all__ \= []\n__version__ \= 0.1\n__date__ \= '${isodate}'\n__updated__ \= '${isodate}'\n\nDEBUG \= 1\nTESTRUN \= 0\nPROFILE \= 0\n\ndef main(argv\=None)\:\n    '''Command line options.'''\n\n    program_name \= os.path.basename(sys.argv[0])\n    program_version \= "v0.1"\n    program_build_date \= "%s" % __updated__\n\n    program_version_string \= '%%prog %s (%s)' % (program_version, program_build_date)\n    \#program_usage \= '''usage\: spam two eggs''' \# optional - will be autogenerated by optparse\n    program_longdesc \= '''''' \# optional - give further explanation about what the program does\n    program_license \= "Copyright ${year} ${user_name} (${organization_name})                                            \\\n                Licensed under the Apache License 2.0\\nhttp\://www.apache.org/licenses/LICENSE-2.0"\n\n    if argv is None\:\n        argv \= sys.argv[1\:]\n    try\:\n        \# setup option parser\n        parser \= OptionParser(version\=program_version_string, epilog\=program_longdesc, description\=program_license)\n        parser.add_option("-i", "--in", dest\="infile", help\="set input path [default\: %default]", metavar\="FILE")\n        parser.add_option("-o", "--out", dest\="outfile", help\="set output path [default\: %default]", metavar\="FILE")\n        parser.add_option("-v", "--verbose", dest\="verbose", action\="count", help\="set verbosity level [default\: %default]")\n\n        \# set defaults\n        parser.set_defaults(outfile\="./out.txt", infile\="./in.txt")\n\n        \# process options\n        (opts, args) \= parser.parse_args(argv)\n\n        if opts.verbose &gt; 0\:\n            print("verbosity level \= %d" % opts.verbose)\n        if opts.infile\:\n            print("infile \= %s" % opts.infile)\n        if opts.outfile\:\n            print("outfile \= %s" % opts.outfile)\n\n        \# MAIN BODY \#\n\n    except Exception, e\:\n        indent \= len(program_name) * " "\n        sys.stderr.write(program_name + "\: " + repr(e) + "\\n")\n        sys.stderr.write(indent + "  for help use --help")\n        return 2\n\n\nif __name__ \=\= "__main__"\:\n    if DEBUG\:\n        sys.argv.append("-h")\n    if TESTRUN\:\n        import doctest\n        doctest.testmod()\n    if PROFILE\:\n        import cProfile\n        import pstats\n        profile_filename \= '${module}_profile.txt'\n        cProfile.run('main()', profile_filename)\n        statsfile \= open("profile_stats.txt", "wb")\n        p \= pstats.Stats(profile_filename, stream\=statsfile)\n        stats \= p.strip_dirs().sort_stats('cumulative')\n        stats.print_stats()\n        statsfile.close()\n        sys.exit(0)\n    sys.exit(main())</template></templates>
